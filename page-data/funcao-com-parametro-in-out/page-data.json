{"componentChunkName":"component---src-templates-blog-post-js","path":"/funcao-com-parametro-in-out/","result":{"data":{"site":{"siteMetadata":{"title":"Felipe Mendes"}},"markdownRemark":{"id":"4ae4eecd-b0c1-5a20-b85e-a2f3f99c21d9","excerpt":"Em Swift, todos os parâmetros que são informados nas funções e métodos parmanecem com o mesmo valor dentro do escopo. Ou seja, por padrão todos os parâmetros…","html":"<p>Em Swift, todos os parâmetros que são informados nas funções e métodos parmanecem com o mesmo valor dentro do escopo. Ou seja, por padrão todos os parâmetros são <code class=\"language-text\">constantes</code> e por este motivo o valor recebido não pode ser modificado. Tentar alterar esse valor dentro do escopo retornará um erro ao compilar a aplicação. Isso previne fazer alguma alteração por engano no valor de origem.</p>\n<p>No entanto, este comportamento por ser alterado quando utilizado o tipo <strong>In-Out</strong> junto à declaração do parâmetro. Este procedimento é conhecido como <strong>copy-in copy-out</strong> ou <strong>call by value result</strong> e segue o seguinte comportamento:</p>\n<ul>\n<li>Quando a função é invocada, o valor do argumento é copiado.</li>\n<li>No escopo da função, a cópia é modificada.</li>\n<li>No retorno da função, o valor da cópia é atribuído ao argumento de origem.</li>\n</ul>\n<p>A assinatura de funções com <em>In-Out</em> deve seguir este modelo:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function-definition function\">swapTwoInts</span><span class=\"token punctuation\">(</span><span class=\"token omit keyword\">_</span> a<span class=\"token punctuation\">:</span> <span class=\"token keyword\">inout</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">,</span> <span class=\"token omit keyword\">_</span> b<span class=\"token punctuation\">:</span> <span class=\"token keyword\">inout</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> temporaryA <span class=\"token operator\">=</span> a\n    a <span class=\"token operator\">=</span> b\n    b <span class=\"token operator\">=</span> temporaryA\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>E ao invocar a função é obrigatório informar o caracter <code class=\"language-text\">&amp;</code> antes do parâmetro:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token function\">swapTwoInts</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>someInt<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>anotherInt<span class=\"token punctuation\">)</span></code></pre></div>\n<p>O uso do tipo <em>In-Out</em> possui diversos benefícios, como evitar a declaração de uma nova variável com o valor do parâmetro atribuído para que seja realizado as modifições na função.</p>\n<p>No exemplo abaixo, o parâmetro <em>viewItems</em> do método <em>arrangeIntoStackView()</em> recebe uma coleção de <em>UIView’s</em> e a cada dois itens estes são empilhados dentro de uma nova <em>UIStackView</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function-definition function\">arrangeIntoStackView</span><span class=\"token punctuation\">(</span>from viewItems<span class=\"token punctuation\">:</span> <span class=\"token keyword\">inout</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">UIView</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> verticalStackView <span class=\"token operator\">=</span> <span class=\"token class-name\">UIStackView</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>zero<span class=\"token punctuation\">)</span>\n    verticalStackView<span class=\"token punctuation\">.</span>axis <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span>vertical\n    verticalStackView<span class=\"token punctuation\">.</span>spacing <span class=\"token operator\">=</span> <span class=\"token number\">8</span>\n    \n    viewItems<span class=\"token punctuation\">.</span><span class=\"token keyword\">prefix</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> item <span class=\"token keyword\">in</span>\n        verticalStackView<span class=\"token punctuation\">.</span><span class=\"token function\">addArrangedSubview</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span>\n        viewItems<span class=\"token punctuation\">.</span><span class=\"token function\">removeFirst</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>A chamada ficaria desta maneira:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token function\">arrangeIntoStackView</span><span class=\"token punctuation\">(</span>from<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>itemViewCollection<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Para mais detalhes sobre este comportamento do <em>in-out</em>, veja <a href=\"https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID545\">In-Out Parameters em Swift Docs</a>.</p>","frontmatter":{"title":"Função com parâmetro In-Out","date":"02 outubro, 2019","description":""}},"previous":{"fields":{"slug":"/atalhos-terminal-e-git/"},"frontmatter":{"title":"Atalhos de Terminal e Git"}},"next":{"fields":{"slug":"/chuck-facts/"},"frontmatter":{"title":"Pet Project: Chuck Facts"}}},"pageContext":{"id":"4ae4eecd-b0c1-5a20-b85e-a2f3f99c21d9","previousPostId":"f397b09b-9141-5214-a811-1f837f5853a6","nextPostId":"f0457c7a-f656-5a4c-95ab-78247f7bec1d"}},"staticQueryHashes":["1344965497","2841359383"]}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/multiple-variadic-parameters/","result":{"data":{"site":{"siteMetadata":{"title":"Felipe Mendes"}},"markdownRemark":{"id":"7287fa7f-d9fd-5308-ac60-4be302d236a9","excerpt":"O termo “variádico” refere-se à capacidade de uma função ou método lidar com um número variável de argumentos. Em linguagens de programação, isso significa que…","html":"<p>O termo “variádico” refere-se à capacidade de uma função ou método lidar com um número variável de argumentos. Em linguagens de programação, isso significa que a função pode ser chamada com diferentes quantidades de argumentos, e ela consegue adaptar-se dinamicamente a esses inputs.</p>\n<p>No contexto de Swift e de outras linguagens, um parâmetro variádico é marcado com reticências (…). Ele permite que a função aceite zero ou mais valores do mesmo tipo como argumentos. Dentro da função, esses argumentos são tratados como uma coleção, como um array.</p>\n<p>Portanto, na linguagem Swift, os parâmetros variádicos são uma maneira eficaz de lidar com uma quantidade variável de argumentos/parâmetros em uma função. </p>\n<p>Felizmente, Swift permite que você tenha mais de um parâmetro variádico na mesma função. Isso oferece uma flexibilidade significativa ao lidar com diferentes tipos de argumentos e simplifica a chamada de funções. Por exemplo:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function-definition function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token omit keyword\">_</span> numbers<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span><span class=\"token operator\">...</span><span class=\"token punctuation\">,</span> <span class=\"token omit keyword\">_</span> otherNumbers<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> sumNumbers <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">+</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> sumOtherNumbers <span class=\"token operator\">=</span> otherNumbers<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">+</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> sumNumbers <span class=\"token operator\">+</span> sumOtherNumbers\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> total <span class=\"token operator\">=</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Neste exemplo, a função soma aceita dois conjuntos de parâmetros variádicos, <code class=\"language-text\">numbers</code> e <code class=\"language-text\">otherNumbers</code>, e retorna a soma total de ambos.</p>\n<p>Além disso, é interessante observar que outras linguagens, como Python, compartilham uma característica semelhante. Em Python, você pode usar o operador <code class=\"language-text\">*</code> para definir parâmetros variádicos em uma função, permitindo que ela aceite um número variável de argumentos, como mostrado no exemplo a seguir:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">sum_numbers</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> result\n\ntotal <span class=\"token operator\">=</span> sum_numbers<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Em resumo, tanto em Swift quanto em Python, a capacidade de usar múltiplos parâmetros variádicos em funções oferece versatilidade na criação de funções que podem lidar com diferentes quantidades de argumentos. Isso é uma ferramenta poderosa para simplificar o código e torná-lo mais eficiente, seja no desenvolvimento de aplicativos iOS e macOS com Swift ou em várias aplicações com Python.</p>","frontmatter":{"title":"Multiple Variadic Parameters","date":"21 outubro, 2021","description":""}},"previous":{"fields":{"slug":"/mocking-in-swift/"},"frontmatter":{"title":"Mocking in Swift"}},"next":{"fields":{"slug":"/copy-on-write/"},"frontmatter":{"title":"Copy on Write em Swift"}}},"pageContext":{"id":"7287fa7f-d9fd-5308-ac60-4be302d236a9","previousPostId":"78479687-4b7a-5c30-8835-fe7d544b8332","nextPostId":"e7faab55-f525-54db-9253-1270e87573d2"}},"staticQueryHashes":["1344965497","2841359383"]}
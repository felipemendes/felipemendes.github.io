{"componentChunkName":"component---src-templates-blog-post-js","path":"/usernotifications-framework/","result":{"data":{"site":{"siteMetadata":{"title":"Felipe Mendes"}},"markdownRemark":{"id":"0bfb9060-bb59-5e9a-bd44-35e1fffb6aa1","excerpt":"Este  é responsável por enviar notificações para o dispositivo do usuário a partir de um servidor ou gerá-las localmente a partir do aplicativo. As notificações…","html":"<p>Este <code class=\"language-text\">framework</code> é responsável por enviar notificações para o dispositivo do usuário a partir de um servidor ou gerá-las localmente a partir do aplicativo. As notificações comunicam informações importantes aos usuários do aplicativo, independentemente do aplicativo estar em execução no primeiro ou segundo plano. Podem exibir um alerta, tocar um som ou marcar o ícone do aplicativo.</p>\n<p>Para notificações locais, o aplicativo cria o conteúdo da notificação e especifica uma condição, como um horário, local ou data, que aciona a entrega da notificação. Para notificações remotas (também conhecidas como <em>push notifications</em>), é necessário utilizar um servidor para gerar as notificações, e o serviço de notificação por push da Apple (APNs) que lida com a entrega dessas notificações para os dispositivos.</p>\n<p>Segundo a <a href=\"https://developer.apple.com/documentation/usernotifications\">documentação</a> da Apple, o <code class=\"language-text\">framework</code> <em>UserNotifications</em> faz todas as tentativas para entregar as notificações locais e remotas em tempo hábil, mas a entrega não é garantida. O uso do <em>PushKit</em> oferece um mecanismo de entrega mais oportuno para tipos específicos de notificações, como aquelas usadas para complicações de <em>VoIP</em> e <em>watchOS</em>.</p>\n<p>Vale lembrar que o uso de notificações devem ser utilizadas com responsabilidade e seguindo as sugestões da Apple:</p>\n<ul>\n<li>Enviar notificações apenas quando forem relevantes</li>\n<li>Não enviar spam</li>\n<li>Não enviar notificações para aumentar o tráfego</li>\n</ul>\n<h3>Configuração</h3>\n<p>Nesta postagem vou focar na criação de notificações locais, pois esta configuração é semelhante às notificações remotas, porém sem o trabalho necessário do servidor. Como em muitos serviços da Apple, onde a privacidade pode ser um problema, precisamos primeiro solicitar ao usuário a autorização para receber notificações.</p>\n<p>Geralmente deseja-se solicitar autorização para notificações o mais cedo possível, caso contrário, as notificações recebidas antes da concessão do acesso não serão exibidas. A Apple sugere concluir isso ao iniciar o aplicativo através do método: <code class=\"language-text\">application:didFinishLaunchingWithOptions:</code>.</p>\n<p>Na classe do <code class=\"language-text\">AppDelegate</code> é necessário importar o <code class=\"language-text\">framework</code> <em>UserNotifications</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">import</span> <span class=\"token class-name\">UserNotifications</span></code></pre></div>\n<p>No cabeçalho da classe, crie uma nova propriedade e atribua uma instância da classe <code class=\"language-text\">UNUserNotificationCenter</code> à ela. Esta será responsável por gerenciar as notificações, ou seja, nossa central de notificações.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> notificationCenter <span class=\"token operator\">=</span> <span class=\"token class-name\">UNUserNotificationCenter</span><span class=\"token punctuation\">.</span><span class=\"token function\">current</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>No método <code class=\"language-text\">didFinishLaunchingWithOptions</code> declare as opções disponíveis para as notificações. No total são quatro propriedades disponíveis: <code class=\"language-text\">badge</code>, <code class=\"language-text\">sound</code>, <code class=\"language-text\">alert</code> e <code class=\"language-text\">carPlay</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> options<span class=\"token punctuation\">:</span> <span class=\"token class-name\">UNAuthorizationOptions</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span>alert<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span>sound<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span>badge<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Decidido sobre a lista de parâmetros de notificação, podemos solicitar permissão ao usuário para enviar notificações ao aplicativo.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">notificationCenter<span class=\"token punctuation\">.</span><span class=\"token function\">requestAuthorization</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">:</span> options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> didAllow<span class=\"token punctuation\">,</span> error <span class=\"token keyword\">in</span>\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>didAllow <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"User has declined notifications\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Caso o usuário não autorize ou altere esta preferência nas configurações do aplicativo, é possível rastrear esta modifição através da propriedade <code class=\"language-text\">getNotificationSettings</code>. Essa chamada contém um <em>completion block</em> que invoca  <code class=\"language-text\">UNNotificationSettings</code> e pode ser usada para verificar o status da autorização ou de certos parâmetros de notificação.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">notificationCenter<span class=\"token punctuation\">.</span>getNotificationSettings <span class=\"token punctuation\">{</span> settings <span class=\"token keyword\">in</span>\n  <span class=\"token keyword\">if</span> settings<span class=\"token punctuation\">.</span>authorizationStatus <span class=\"token operator\">!=</span> <span class=\"token punctuation\">.</span>authorized <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Notifications not allowed\"</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span> </code></pre></div>\n<p>Feito esse processo, é necessário definir o <code class=\"language-text\">delegate</code> da central de notificação para o <code class=\"language-text\">AppDelegate</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function-definition function\">application</span><span class=\"token punctuation\">(</span><span class=\"token omit keyword\">_</span> application<span class=\"token punctuation\">:</span> <span class=\"token class-name\">UIApplication</span><span class=\"token punctuation\">,</span> didFinishLaunchingWithOptions launchOptions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">UIApplication</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">LaunchOptionsKey</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">Any</span><span class=\"token punctuation\">]</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Bool</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n    notificationCenter<span class=\"token punctuation\">.</span>delegate <span class=\"token operator\">=</span> <span class=\"token keyword\">self</span>\n    <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Os métodos obrigatórios são:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">extension</span> <span class=\"token class-name\">AppDelegate</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">UNUserNotificationCenterDelegate</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">userNotificationCenter</span><span class=\"token punctuation\">(</span><span class=\"token omit keyword\">_</span> center<span class=\"token punctuation\">:</span> <span class=\"token class-name\">UNUserNotificationCenter</span><span class=\"token punctuation\">,</span>\n                                didReceive response<span class=\"token punctuation\">:</span> <span class=\"token class-name\">UNNotificationResponse</span><span class=\"token punctuation\">,</span>\n                                withCompletionHandler completionHandler<span class=\"token punctuation\">:</span> <span class=\"token attribute atrule\">@escaping</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">completionHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">userNotificationCenter</span><span class=\"token punctuation\">(</span><span class=\"token omit keyword\">_</span> center<span class=\"token punctuation\">:</span> <span class=\"token class-name\">UNUserNotificationCenter</span><span class=\"token punctuation\">,</span>\n                                willPresent notification<span class=\"token punctuation\">:</span> <span class=\"token class-name\">UNNotification</span><span class=\"token punctuation\">,</span>\n                                withCompletionHandler completionHandler<span class=\"token punctuation\">:</span> <span class=\"token attribute atrule\">@escaping</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">UNNotificationPresentationOptions</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">completionHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span>alert<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span>sound<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span>badge<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>Estrutura de notificação</h4>\n<p>O conteúdo da notificação deve ser configurado por meio de uma instância do <code class=\"language-text\">UNMutableNotificationContent</code>, que contém as seguintes propriedades:</p>\n<ol>\n<li><em>title</em>: cabeçalho da notificação. Do tipo <em>String</em>.</li>\n<li><em>subtitle</em>: subtítulo da notificação. Do tipo <em>String</em>.</li>\n<li><em>body</em>: Corpo com o texto principal da notificação. Do tipo <em>String</em>.</li>\n<li><em>badge</em>: Número a ser exibido no ícone do aplicativo por notificação. Do tipo <em>NSNumber</em>.</li>\n<li><em>sound</em>: Som emitido pela notificação. Do tipo <em>UNNotificationSound</em>. Para usar o som padrão, use <em>UNNotificationSound.default()</em>.</li>\n<li><em>launchImageName</em>: Nome do arquivo de imagem do ícone. Utilize <code class=\"language-text\">nil</code> para usar a imagem padrão do aplicativo. Do tipo <em>String</em>.</li>\n<li><em>userInfo</em>: Dicionário usado para armazenar informações do usuário que podem ser enviadas para uma notificação.</li>\n<li><em>attachments</em>: Utilizado para ativar áudio, imagem ou vídeo.</li>\n</ol>\n<h4>Agendar notificação</h4>\n<p>Como dito, notificações podem ser agendadas por horário, local ou data. Nesse exemplo, vamos criar agendamentos por horário por ser o tipo comumente utilizado.</p>\n<p>No disparo por horário deve ser definido o tempo em segundos:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> trigger <span class=\"token operator\">=</span> <span class=\"token class-name\">UNTimeIntervalNotificationTrigger</span><span class=\"token punctuation\">(</span>timeInterval<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> repeats<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Em seguida, é necessário adicionar a requisição à central de notificações. Toda notificação deve possuir um identificador único. Caso o mesmo identificar seja solicitado novamente, este será sobreposto ao existente. Assim o método <code class=\"language-text\">add()</code> consegue controlar o agendamento de cada notificação.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> identifier <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"UserNotificationIdentifier\"</span></span>\n<span class=\"token keyword\">let</span> request <span class=\"token operator\">=</span> <span class=\"token class-name\">UNNotificationRequest</span><span class=\"token punctuation\">(</span>identifier<span class=\"token punctuation\">:</span> identifier<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">:</span> content<span class=\"token punctuation\">,</span> trigger<span class=\"token punctuation\">:</span> trigger<span class=\"token punctuation\">)</span>\n\nnotificationCenter<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> error <span class=\"token operator\">=</span> error <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Error </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">error<span class=\"token punctuation\">.</span>localizedDescription</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h5>Exemplo de agendamento</h5>\n<p>Para facilitar a criação do conteúdo das notificações pode-se utilizar uma <code class=\"language-text\">struct</code> para receber estas informações. Conforme modelo:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">UserNotificationContent</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> identifier<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span>\n    <span class=\"token keyword\">let</span> title<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span>\n    <span class=\"token keyword\">let</span> body<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span>\n    <span class=\"token keyword\">let</span> timeInterval<span class=\"token punctuation\">:</span> <span class=\"token class-name\">TimeInterval</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>O método de agendamento das notificações ficaria dessa maneira no <code class=\"language-text\">AppDelegate</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">extension</span> <span class=\"token class-name\">AppDelegate</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">scheduleUserNotification</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">for</span> userNotificationContent<span class=\"token punctuation\">:</span> <span class=\"token class-name\">UserNotificationContent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>        \n        <span class=\"token keyword\">let</span> content <span class=\"token operator\">=</span> <span class=\"token class-name\">UNMutableNotificationContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        content<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> userNotificationContent<span class=\"token punctuation\">.</span>title\n        content<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> userNotificationContent<span class=\"token punctuation\">.</span>body\n        content<span class=\"token punctuation\">.</span>sound <span class=\"token operator\">=</span> <span class=\"token class-name\">UNNotificationSound</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span>\n\n        <span class=\"token keyword\">let</span> trigger <span class=\"token operator\">=</span> <span class=\"token class-name\">UNTimeIntervalNotificationTrigger</span><span class=\"token punctuation\">(</span>timeInterval<span class=\"token punctuation\">:</span> userNotificationContent<span class=\"token punctuation\">.</span>timeInterval<span class=\"token punctuation\">,</span> repeats<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">let</span> request <span class=\"token operator\">=</span> <span class=\"token class-name\">UNNotificationRequest</span><span class=\"token punctuation\">(</span>identifier<span class=\"token punctuation\">:</span> userNotificationContent<span class=\"token punctuation\">.</span>identifier<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">:</span> content<span class=\"token punctuation\">,</span> trigger<span class=\"token punctuation\">:</span> trigger<span class=\"token punctuation\">)</span>\n\n        notificationCenter<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> error <span class=\"token keyword\">in</span>\n            <span class=\"token keyword\">if</span> error <span class=\"token operator\">!=</span> <span class=\"token nil constant\">nil</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"error </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\"><span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>describing<span class=\"token punctuation\">:</span> error<span class=\"token punctuation\">)</span></span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>A função de agendamento pode ser utilizada como preferir. Exemplo dentro de uma <code class=\"language-text\">@IBAction</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ViewController</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">UIViewController</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">var</span> appDelegate <span class=\"token operator\">=</span> <span class=\"token class-name\">UIApplication</span><span class=\"token punctuation\">.</span>shared<span class=\"token punctuation\">.</span>delegate <span class=\"token keyword\">as</span><span class=\"token operator\">?</span> <span class=\"token class-name\">AppDelegate</span>\n\n    <span class=\"token keyword\">let</span> notifications <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">UserNotificationContent</span><span class=\"token punctuation\">(</span>identifier<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"first-notification\"</span></span><span class=\"token punctuation\">,</span>\n                                                title<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"Primeira notificação\"</span></span><span class=\"token punctuation\">,</span>\n                                                body<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"Notificação exibida após 30 segundos\"</span></span><span class=\"token punctuation\">,</span>\n                                                timeInterval<span class=\"token punctuation\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token class-name\">UserNotificationContent</span><span class=\"token punctuation\">(</span>identifier<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"second-notification\"</span></span><span class=\"token punctuation\">,</span>\n                                                title<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"Segunda notificação\"</span></span><span class=\"token punctuation\">,</span>\n                                                body<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"Notificação exibida após 1 minuto\"</span></span><span class=\"token punctuation\">,</span>\n                                                timeInterval<span class=\"token punctuation\">:</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token attribute atrule\">@IBAction</span> <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">scheduleNotificationsButtonTapped</span><span class=\"token punctuation\">(</span><span class=\"token omit keyword\">_</span> sender<span class=\"token punctuation\">:</span> <span class=\"token class-name\">UIButton</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        notifications<span class=\"token punctuation\">.</span>forEach <span class=\"token punctuation\">{</span> notification <span class=\"token keyword\">in</span>\n            appDelegate<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">scheduleShoppingNotification</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">:</span> notification<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>Cancelar agendamento da notificação</h4>\n<p>Da mesma forma que é possível agendar uma notificação, também podemos cancelar ou remover um agendamento da central de notificações.</p>\n<p>Este processo pode ser feito através do identificador. É possível remover notificações pendentes e notificações que já foram entregues e ainda estão na central de notificações do iOS:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">notificationCenter<span class=\"token punctuation\">.</span><span class=\"token function\">removePendingNotificationRequests</span><span class=\"token punctuation\">(</span>withIdentifiers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string-literal\"><span class=\"token string\">\"identifier\"</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nnotificationCenter<span class=\"token punctuation\">.</span><span class=\"token function\">removeDeliveredNotifications</span><span class=\"token punctuation\">(</span>withIdentifiers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string-literal\"><span class=\"token string\">\"identifier\"</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Seguindo o exemplo do agendamento, o cancelamento ficaria dessa forma:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">extension</span> <span class=\"token class-name\">AppDelegate</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">unscheduleUserNotification</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">for</span> identifiers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        notificationCenter<span class=\"token punctuation\">.</span><span class=\"token function\">removePendingNotificationRequests</span><span class=\"token punctuation\">(</span>withIdentifiers<span class=\"token punctuation\">:</span> identifiers<span class=\"token punctuation\">)</span>\n        notificationCenter<span class=\"token punctuation\">.</span><span class=\"token function\">removeDeliveredNotifications</span><span class=\"token punctuation\">(</span>withIdentifiers<span class=\"token punctuation\">:</span> identifiers<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h5>Exemplo de cancelamento</h5>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ViewController</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">UIViewController</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token attribute atrule\">@IBAction</span> <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">unscheduleNotificationsButtonTapped</span><span class=\"token punctuation\">(</span><span class=\"token omit keyword\">_</span> sender<span class=\"token punctuation\">:</span> <span class=\"token class-name\">UIButton</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> identifiers <span class=\"token operator\">=</span> notifications<span class=\"token punctuation\">.</span>map <span class=\"token punctuation\">{</span> <span class=\"token short-argument\">$0</span><span class=\"token punctuation\">.</span>identifier <span class=\"token punctuation\">}</span>\n        appDelegate<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">unscheduleShoppingNotification</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">:</span> identifiers<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"UserNotifications Framework","date":"21 abril, 2020","description":"Este framework é responsável por enviar notificações para o dispositivo do usuário a partir de um servidor ou gerá-las localmente a partir do..."}},"previous":{"fields":{"slug":"/chuck-facts/"},"frontmatter":{"title":"Pet Project: Chuck Facts"}},"next":{"fields":{"slug":"/ciclo-de-vida-aplicativo-ios/"},"frontmatter":{"title":"O ciclo de vida do aplicativo iOS"}}},"pageContext":{"id":"0bfb9060-bb59-5e9a-bd44-35e1fffb6aa1","previousPostId":"f0457c7a-f656-5a4c-95ab-78247f7bec1d","nextPostId":"05201a73-a882-55bb-b4e9-b1b9bb650d02"}},"staticQueryHashes":["1344965497","2841359383"]}
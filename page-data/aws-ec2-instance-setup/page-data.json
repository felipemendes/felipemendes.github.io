{"componentChunkName":"component---src-templates-blog-post-js","path":"/aws-ec2-instance-setup/","result":{"data":{"site":{"siteMetadata":{"title":"Felipe Mendes"}},"markdownRemark":{"id":"8a78fe39-86d2-5021-8aba-9bcf5c525bd8","excerpt":"A implantação de um projeto Python com FastAPI em uma instância AWS EC2 fornece um ambiente robusto e escalável para aplicações web. Este tutorial irá orientá…","html":"<p>A implantação de um projeto Python com FastAPI em uma instância AWS EC2 fornece um ambiente robusto e escalável para aplicações web. Este tutorial irá orientá-lo na configuração de uma instância EC2 para um projeto FastAPI rodando com Docker, incluindo gerenciamento de banco de dados com PostgreSQL e pgAdmin, e protegendo sua aplicação com Nginx e HTTPS.</p>\n<p><strong>Pré-requisitos:</strong></p>\n<ul>\n<li>Uma conta AWS</li>\n<li>Entendimento básico de Docker, FastAPI e comandos Linux</li>\n<li>Docker e Docker Compose instalados na sua máquina local</li>\n<li>Opcional: Clonar o repositório <a href=\"https://github.com/felipemendes/fastapi-template\">FastAPI-Template</a> para utilizar como modelo da estrutura e configuração para esse tutorial.</li>\n</ul>\n<p><strong>Passo 1: Criar uma Instância AWS EC2</strong></p>\n<ol>\n<li>Faça login no <a href=\"https://console.aws.amazon.com/ec2/\">Painel AWS EC2</a>.</li>\n<li>Clique em <strong>Launch Instance</strong> para criar uma nova instância EC2.</li>\n<li>Escolha uma Amazon Machine Image (AMI), como Ubuntu Server.</li>\n<li>Selecione um tipo de instância (por exemplo, <code class=\"language-text\">t2.micro</code> para o nível gratuito).</li>\n<li>Configure os detalhes da instância conforme necessário.</li>\n<li>Adicione armazenamento se o padrão não for suficiente.</li>\n<li>Configure o grupo de segurança para adicionar regras de entrada para as portas (demarcado como <strong>Inbound Rules</strong>) <code class=\"language-text\">8090</code>, <code class=\"language-text\">8080</code> e <code class=\"language-text\">5050</code> para permitir tráfego.</li>\n<li>Crie e baixe um novo par de chaves ou escolha um existente. Lembre-se de onde você salvou, pois precisará disso para se conectar via SSH à sua instância.</li>\n<li>Revise e inicie a instância.</li>\n</ol>\n<p><strong>Passo 2: Conectar-se à Sua Instância EC2 via SSH</strong></p>\n<p>Use o terminal ou prompt de comando para se conectar à sua instância:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> <span class=\"token parameter variable\">-i</span> /caminho/para/sua-chave.pem ubuntu@<span class=\"token punctuation\">{</span>ip_publico<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Substitua <code class=\"language-text\">{ip_publico}</code> pelo endereço IP público da sua instância.</p>\n<p><strong>Passo 3: Instalar Dependências</strong></p>\n<p>Atualize as listas de pacotes e instale <code class=\"language-text\">pipenv</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> pipenv</code></pre></div>\n<p><strong>Passo 4: Configurar Docker</strong></p>\n<p>Certifique-se de que o Docker está instalado na sua instância EC2. Se não, instale o Docker:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> https://get.docker.com <span class=\"token parameter variable\">-o</span> get-docker.sh\n<span class=\"token function\">sudo</span> <span class=\"token function\">sh</span> get-docker.sh</code></pre></div>\n<p>Adicione seu usuário ao grupo Docker para gerenciar o Docker como um usuário não root:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">usermod</span> <span class=\"token parameter variable\">-aG</span> <span class=\"token function\">docker</span> <span class=\"token variable\">${<span class=\"token environment constant\">USER</span>}</span></code></pre></div>\n<p>Instale o Docker Compose:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">curl</span> <span class=\"token parameter variable\">-L</span> <span class=\"token string\">\"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> <span class=\"token parameter variable\">-s</span><span class=\"token variable\">)</span></span>-<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> <span class=\"token parameter variable\">-m</span><span class=\"token variable\">)</span></span>\"</span> <span class=\"token parameter variable\">-o</span> /usr/local/bin/docker-compose\n<span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> +x /usr/local/bin/docker-compose</code></pre></div>\n<p><strong>Passo 5: Implantar Seu Aplicativo FastAPI</strong></p>\n<p>Clone seu projeto FastAPI (ou o repositório de template) para a instância EC2 ou transfira seus arquivos de projeto usando SCP ou SFTP.</p>\n<p>Navegue até o diretório do seu projeto e execute seu aplicativo com o Docker Compose:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker-compose</span> up <span class=\"token parameter variable\">--build</span> <span class=\"token parameter variable\">-d</span></code></pre></div>\n<p>Este comando constrói a imagem Docker para o seu aplicativo FastAPI e inicia os contêineres conforme definido no seu arquivo <code class=\"language-text\">docker-compose.yml</code>.</p>\n<p><strong>Passo 6 Opcional: Configurar Nginx como um Proxy Reverso</strong></p>\n<p>Instale o Nginx:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> nginx</code></pre></div>\n<p>Configure o Nginx para encaminhar solicitações para o seu aplicativo FastAPI. Crie um novo arquivo de configuração em <code class=\"language-text\">/etc/nginx/sites-available/</code> e vincule-o a <code class=\"language-text\">sites-enabled/</code>.</p>\n<p><strong>Passo 7 Opcional: Proteger Seu Aplicativo com HTTPS</strong></p>\n<p>Instale o Certbot e o plugin Nginx para obter um certificado SSL gratuito da Let’s Encrypt:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> certbot python3-certbot-nginx\n<span class=\"token function\">sudo</span> certbot <span class=\"token parameter variable\">--nginx</span> <span class=\"token parameter variable\">-d</span> seudominio.com</code></pre></div>\n<p>Siga as instruções do Certbot para configurar o HTTPS para o seu domínio.</p>\n<p><strong>Passo 8: Acessar Seu Aplicativo FastAPI</strong></p>\n<p>Seu aplicativo FastAPI agora deve ser acessível em <code class=\"language-text\">http://{ip_publico}:8090/docs</code> para a UI do Swagger, com <code class=\"language-text\">https://seudominio.com</code> servindo seu aplicativo de forma segura através do HTTPS (caso Nginx estiver configurado).</p>\n<p><strong>Conclusão:</strong></p>\n<p>Você configurou com sucesso uma instância AWS EC2 para hospedar seu projeto FastAPI com Docker, completo com um banco de dados <em>PostgreSQL</em>, <em>pgAdmin</em> para gerenciamento de banco de dados e <em>Nginx</em> para acesso seguro via HTTPS. Esta configuração fornece uma base sólida para a implantação de robustas aplicações web em Python.</p>\n<p>Para instruções detalhadas e solução de problemas, consulte a documentação oficial da <a href=\"https://aws.amazon.com/pt/documentation/ec2/\">AWS</a>, <a href=\"https://fastapi.tiangolo.com/pt/\">FastAPI</a> e <a href=\"https://docs.docker.com/\">Docker</a>.</p>","frontmatter":{"title":"FastAPI com Docker em uma Instância AWS EC2","date":"04 fevereiro, 2024","description":""}},"previous":{"fields":{"slug":"/thread-queue/"},"frontmatter":{"title":"Thread e Queue"}},"next":null},"pageContext":{"id":"8a78fe39-86d2-5021-8aba-9bcf5c525bd8","previousPostId":"570a77be-19f9-52c7-81be-fdd019c13620","nextPostId":null}},"staticQueryHashes":["1344965497","2841359383"]}